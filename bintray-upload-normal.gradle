apply plugin: 'com.jfrog.bintray'

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging PUBLISHED_PACKAGING
                groupId PUBLISHED_GROUP_ID
                artifactId PUBLISHED_ARTIFACT_ID
                version PUBLISHED_VERSION

                name PROJECT_NAME
                description PROJECT_DESCRIPTION
                url PROJECT_WEBSITE_URL

                scm {
                    connection PROJECT_VCS_URL
                    developerConnection PROJECT_VCS_URL
                    url PROJECT_WEBSITE_URL
                }

                developers {
                    developer {
                        id DEVELOPER_ID
                        name DEVELOPER_NAME
                        email DEVELOPER_EMAIL
                    }
                }

                licenses {
                    license {
                        name LICENSE_NAME
                        url LICENSE_URL
                    }
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.java
//    classifier = 'sources'
    archiveClassifier.set('sources')
}

task javadocJar(type: Jar) {
    from javadoc
//    classifier = 'javadoc'
    archiveClassifier.set('javadoc')
}

javadoc {
//    options.encoding = 'UTF-8'
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charset', 'UTF-8')
//    options {
//        encoding 'UTF-8'
//        charSet 'UTF-8'
//        author true
//        version true
//        links 'http://docs.oracle.com/javase/' + sourceCompatibility + '/docs/api'
//        title PUBLISHED_ARTIFACT_ID
//    }
}

artifacts {
    archives javadocJar, sourcesJar
}

Properties properties = new Properties()
if (project.rootProject.file('local.properties').exists()) {
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
} else if (project.rootProject.file('gradle-local.properties').exists()) {
    properties.load(project.rootProject.file('gradle-local.properties').newDataInputStream())
} else {
    properties.load(project.rootProject.file('gradle.properties').newDataInputStream())
}

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apiKey")
    configurations = ['archives']
    publish = true
    pkg {
        repo = BINTRAY_REPO
        name = BINTRAY_NAME
        websiteUrl = PROJECT_WEBSITE_URL
        vcsUrl = PROJECT_VCS_URL
        issueTrackerUrl = PROJECT_ISSUE_TRACKER_URL
        licenses = ALL_LICENSES
        publicDownloadNumbers = true
        version {
            desc = PROJECT_DESCRIPTION
            gpg {
                sign = true
                passphrase = properties.getProperty("bintray.gpg.password")
            }
        }
    }
}
